@model Company
@{
    ViewData["Title"] = "Company Dashboard";
    var totalJobs = ViewBag.TotalJobs as int? ?? 0;
    var activeJobs = ViewBag.ActiveJobs as int? ?? 0;
    var totalApplications = ViewBag.TotalApplications as int? ?? 0;
    var recentApplications = ViewBag.RecentApplications as List<JobApplication> ?? new List<JobApplication>();
}

<div class="container-fluid py-4 dashboard-container">
    <!-- Floating Background Shapes -->
    <div class="bg-shape bg-shape-1"></div>
    <div class="bg-shape bg-shape-2"></div>
    <div class="bg-shape bg-shape-3"></div>

    <!-- Welcome Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="welcome-card text-white p-5 rounded-4 shadow-lg animated-fadein-down">
                <h2 class="fw-bold"><i class="fas fa-building"></i> Welcome, @Model.CompanyName!</h2>
                <p class="lead">Manage your postings, track applications, and connect with top talent effortlessly.</p>
            </div>
        </div>
    </div>

    <div class="row g-4">
        <div class="col-md-3">
            <!-- Company Info -->
            <div class="card gradient-card shadow-sm animated-fadein-left">
                <div class="card-header gradient-header text-white">
                    <h5><i class="fas fa-building"></i> Company Profile</h5>
                </div>
                <div class="card-body">
                    <p><strong>Industry:</strong> @Model.Industry</p>
                    <p>
                        <strong>Website:</strong>
                        @if (!string.IsNullOrEmpty(Model.Website))
                        {
                            <a href="@(Model.Website.StartsWith("http") ? Model.Website : "https://" + Model.Website)"
                               target="_blank" class="link">@Model.Website</a>
                        }
                        else
                        {
                            <span class="text-muted">Not provided</span>
                        }
                    </p>
                    <p><strong>Location:</strong> @(!string.IsNullOrEmpty(Model.Address) ? Model.Address : "Not provided")</p>
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="card gradient-card shadow-sm animated-fadein-left delay-1s">
                <div class="card-header gradient-header text-white">
                    <h6><i class="fas fa-chart-bar"></i> Quick Stats</h6>
                </div>
                <div class="card-body text-center">
                    <div class="stat-box stat-animated">
                        <h3 class="text-primary">@totalJobs</h3>
                        <small>Total Jobs</small>
                    </div>
                    <div class="stat-box stat-animated">
                        <h3 class="text-success">@activeJobs</h3>
                        <small>Active Jobs</small>
                    </div>
                    <div class="stat-box stat-animated">
                        <h3 class="text-warning">@totalApplications</h3>
                        <small>Total Applications</small>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card gradient-card shadow-sm animated-fadein-left delay-2s">
                <div class="card-header gradient-header text-white">
                    <h6><i class="fas fa-bolt"></i> Quick Actions</h6>
                </div>
                <div class="card-body">
                    <a href="@Url.Action("Create", "JobPostingMvc")" class="btn modern-btn w-100 mb-2">
                        <i class="fas fa-plus"></i> Post New Job
                    </a>
                    <a href="@Url.Action("MyPostings", "JobPostingMvc")" class="btn modern-btn-alt w-100 mb-2">
                        <i class="fas fa-briefcase"></i> Manage Jobs
                    </a>
                    <a href="@Url.Action("Profile", "Account", new { userId = Model.UserId })" class="btn modern-outline w-100">
                        <i class="fas fa-user"></i> Edit Profile
                    </a>
                </div>
            </div>
        </div>

        <div class="col-md-9">
            <!-- Recent Applications -->
            <div class="card gradient-card shadow-sm animated-fadein-up">
                <div class="card-header gradient-header text-white">
                    <h5><i class="fas fa-users"></i> Recent Applications</h5>
                </div>
                <div class="card-body">
                    @if (recentApplications.Count > 0)
                    {
                        foreach (var application in recentApplications.Take(5))
                        {
                            <div class="application-card mb-3 p-3 rounded animated-card">
                                <div>
                                    <strong>@application.JobPosting?.Title</strong><br>
                                    <small class="text-muted">
                                        Applied: @application.AppliedDate.ToString("MMM dd, yyyy") |
                                        Status: <span class="badge bg-info">@application.Status</span>
                                    </small>
                                </div>
                                <span class="badge bg-gradient-success">New</span>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No recent applications yet. Once candidates apply, they’ll show here.</p>
                    }
                </div>
            </div>

            <!-- Active Jobs -->
            <div class="card gradient-card shadow-sm animated-fadein-up delay-1s">
                <div class="card-header gradient-header text-white">
                    <h5><i class="fas fa-briefcase"></i> Your Active Job Postings</h5>
                </div>
                <div class="card-body">
                    @if (Model.JobPostings != null && Model.JobPostings.Any(j => j.IsActive && j.DeadlineDate > DateTime.Now))
                    {
                        foreach (var job in Model.JobPostings.Where(j => j.IsActive && j.DeadlineDate > DateTime.Now).Take(3))
                        {
                            <div class="job-card-modern mb-3 p-3 animated-card">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6>@job.Title</h6>
                                    <span class="badge bg-primary">@job.JobType</span>
                                </div>
                                <p class="text-muted mb-2">
                                    @(job.Description.Length > 100 ? job.Description.Substring(0, 100) + "..." : job.Description)
                                </p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <i class="fas fa-users"></i> @job.JobApplications.Count applications |
                                        <i class="fas fa-clock"></i> @job.DeadlineDate?.ToString("MMM dd, yyyy")
                                    </small>
                                    <a href="@Url.Action("Details", "JobPosting", new { id = job.Id })" class="btn modern-outline btn-sm">View</a>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No active job postings. <a href="@Url.Action("Create", "JobPostingMvc")">Post your first job!</a></p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Styles -->
<style>
    /* Background with animated gradient */
    .dashboard-container {
        background: linear-gradient(120deg, #f5f6fa, #e9ecef, #f5f6fa);
        background-size: 300% 300%;
        animation: animatedGradient 12s ease infinite;
        min-height: 100vh;
        font-family: 'Poppins', sans-serif;
        position: relative;
        overflow: hidden;
    }

    /* Floating blurred shapes */
    .bg-shape {
        position: absolute;
        border-radius: 50%;
        filter: blur(80px);
        opacity: 0.5;
        animation: floatShape 18s ease-in-out infinite;
        z-index: 0;
    }

    .bg-shape-1 {
        width: 300px;
        height: 300px;
        background: #667eea;
        top: -100px;
        left: -100px;
        animation-delay: 0s;
    }

    .bg-shape-2 {
        width: 400px;
        height: 400px;
        background: #764ba2;
        bottom: -150px;
        right: -120px;
        animation-delay: 5s;
    }

    .bg-shape-3 {
        width: 250px;
        height: 250px;
        background: #9d7bdc;
        top: 40%;
        left: 60%;
        animation-delay: 10s;
    }

    /* Welcome Card */
    .welcome-card {
        background: linear-gradient(135deg, #667eea, #764ba2);
        box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        border-radius: 20px;
        position: relative;
        overflow: hidden;
        z-index: 1;
    }

        .welcome-card::after {
            content: '';
            position: absolute;
            width: 200%;
            height: 200%;
            top: -50%;
            left: -50%;
            background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, transparent 70%);
            animation: lightSweep 6s linear infinite;
        }

    /* Gradient Cards */
    .gradient-card {
        border-radius: 15px;
        background: linear-gradient(145deg, rgba(118,75,162,0.08), rgba(102,126,234,0.08));
        transition: all 0.3s ease;
        z-index: 1;
    }

        .gradient-card:hover {
            transform: translateY(-6px);
            background: linear-gradient(145deg, rgba(118,75,162,0.15), rgba(102,126,234,0.15));
            box-shadow: 0 15px 30px rgba(0,0,0,0.12);
        }

    /* Gradient Headers */
    .gradient-header {
        background: linear-gradient(135deg, #667eea, #764ba2);
        border-radius: 15px 15px 0 0;
    }

    /* Stats Boxes */
    .stat-box {
        margin-bottom: 15px;
        padding: 10px;
        border-radius: 12px;
        background: rgba(255,255,255,0.3);
        transition: all 0.3s ease;
    }

        .stat-box:hover {
            transform: scale(1.08);
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        }

    /* Buttons */
    .modern-btn, .modern-btn-alt {
        border-radius: 8px;
        transition: all 0.3s ease;
    }

        .modern-btn:hover, .modern-btn-alt:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 15px rgba(0,0,0,0.1);
        }

    /* Modern Outline */
    .modern-outline {
        border-radius: 8px;
        border: 2px solid #764ba2;
        color: #764ba2;
        transition: 0.3s;
    }

        .modern-outline:hover {
            background: #764ba2;
            color: white;
        }

    /* Applications & Jobs */
    .application-card, .job-card-modern {
        border-radius: 12px;
        transition: all 0.3s ease;
    }

        .application-card:hover, .job-card-modern:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 18px rgba(0,0,0,0.1);
        }

    /* Animations */
    @@keyframes animatedGradient {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

    @@keyframes floatShape {
        0%, 100% {
            transform: translateY(0) scale(1);
        }

        50% {
            transform: translateY(-40px) scale(1.1);
        }
    }

    @@keyframes lightSweep {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .animated-fadein-down {
        animation: fadeInDown 0.8s ease forwards;
    }

    .animated-fadein-left {
        animation: fadeInLeft 0.8s ease forwards;
    }

    .animated-fadein-up {
        animation: fadeInUp 0.8s ease forwards;
    }

    .animated-card {
        animation: slideUp 0.6s ease forwards;
    }

    .delay-1s {
        animation-delay: 0.2s;
    }

    .delay-2s {
        animation-delay: 0.4s;
    }

    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInLeft {
        from {
            opacity: 0;
            transform: translateX(-20px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
