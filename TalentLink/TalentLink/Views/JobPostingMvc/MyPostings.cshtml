@model IEnumerable<JobPosting>

@{
    ViewData["Title"] = "My Job Postings";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-12">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4 animate__animated animate__fadeInDown">
                <h2 class="mb-0 text-gradient">
                    <i class="fas fa-briefcase me-2"></i>My Job Postings
                </h2>
                <a href="@Url.Action("Create")" class="btn btn-gradient btn-animated">
                    <i class="fas fa-plus me-1"></i>Post New Job
                </a>
            </div>

            <!-- Success/Error Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show animate__animated animate__fadeIn" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show animate__animated animate__fadeIn" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- No Job Postings -->
            @if (!Model.Any())
            {
                <div class="card shadow-lg border-0 animate__animated animate__fadeInUp">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-briefcase fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted mb-2">No Job Postings Yet</h4>
                        <p class="text-muted mb-4">You haven't posted any jobs yet. Get started by posting your first job!</p>
                        <a href="@Url.Action("Create")" class="btn btn-gradient btn-animated">
                            <i class="fas fa-plus me-1"></i>Post Your First Job
                        </a>
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    @foreach (var job in Model)
                    {
                        <div class="col-md-6 mb-4">
                            <div class="card job-card shadow-sm animate__animated animate__fadeInUp">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h5 class="card-title text-truncate">@job.Title</h5>
                                        <span class="badge bg-@(job.IsActive ? "success" : "secondary")">
                                            @(job.IsActive ? "Active" : "Inactive")
                                        </span>
                                    </div>

                                    <p class="text-muted small mb-2">
                                        <i class="fas fa-clock me-1"></i>Posted: @job.PostedDate.ToString("MMM dd, yyyy")
                                    </p>

                                    <p class="text-muted small mb-2">
                                        <i class="fas fa-calendar-times me-1"></i>Deadline: @job.DeadlineDate?.ToString("MMM dd, yyyy")
                                    </p>

                                    <p class="text-muted small mb-3">
                                        <i class="fas fa-map-marker-alt me-1"></i>@job.Location
                                    </p>

                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="badge bg-info">@job.JobType</span>
                                        @if (job.Salary.HasValue)
                                        {
                                            <span class="text-success fw-bold">@job.Salary.Value.ToString("C")</span>
                                        }
                                    </div>
                                </div>
                                <div class="card-footer bg-transparent">
                                    <div class="d-flex justify-content-between">
                                        <a href="@Url.Action("Edit", new { id = job.Id })" class="btn btn-sm btn-outline-primary btn-animated">
                                            <i class="fas fa-edit me-1"></i>Edit
                                        </a>
                                        <form asp-action="Delete" method="post" onsubmit="return confirm('Are you sure you want to delete this job posting?');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@job.Id" />
                                            <button type="submit" class="btn btn-sm btn-outline-danger btn-animated">
                                                <i class="fas fa-trash me-1"></i>Delete
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<style>
    /* Gradient title */
    .text-gradient {
        background: linear-gradient(135deg, #6a11cb, #2575fc);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Card */
    .job-card {
        border-radius: 12px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
    }

        .job-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.12);
        }

    /* Card footer buttons */
    .btn-animated {
        position: relative;
        overflow: hidden;
        transition: transform 0.3s ease;
    }

        .btn-animated::after {
            content: "";
            position: absolute;
            width: 0;
            height: 100%;
            top: 0;
            left: 0;
            background: rgba(255,255,255,0.15);
            transition: width 0.4s ease;
        }

        .btn-animated:hover::after {
            width: 100%;
        }

    .btn-gradient {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: #fff;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        padding: 8px 16px;
        transition: all 0.3s ease;
    }

        .btn-gradient:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 14px rgba(0,0,0,0.15);
        }

    /* Badges */
    .badge {
        font-size: 0.75rem;
        padding: 0.4em 0.7em;
    }

    /* Table for responsive card spacing */
    @@media (max-width: 767px) {
        .card-body h5

    {
        font-size: 1rem;
    }

    }

    /* Animation for cards */
    .animate__fadeInUp {
        animation-name: fadeInUp;
        animation-duration: 0.8s;
        animation-fill-mode: both;
    }

    @@keyframes fadeInUp {
        0%

    {
        opacity: 0;
        transform: translateY(20px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }

    }
</style>
