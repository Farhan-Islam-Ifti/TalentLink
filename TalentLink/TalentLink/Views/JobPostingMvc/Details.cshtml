@model JobApplication
@{
    ViewData["Title"] = "Application Details";
    var userRole = ViewBag.UserRole as string;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8">
            <!-- Application Header -->
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start mb-3">
                        <div>
                            <h2 class="card-title">Application Details</h2>
                            <h5 class="text-primary">@Model.JobPosting?.Title</h5>
                            <p class="text-muted mb-0">@Model.JobPosting?.Company?.CompanyName</p>
                        </div>
                        <span class="badge bg-@GetStatusBadgeClass(Model.Status) fs-6">@Model.Status</span>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="mb-1">
                                <i class="fas fa-calendar text-muted me-2"></i>
                                <strong>Applied:</strong> @Model.AppliedDate.ToString("MMM dd, yyyy")
                            </p>
                            <p class="mb-1">
                                <i class="fas fa-user text-muted me-2"></i>
                                <strong>Applicant:</strong> @Model.JobSeeker?.User?.FirstName @Model.JobSeeker?.User?.LastName
                            </p>
                        </div>
                        <div class="col-md-6">
                            @if (Model.InterviewDate.HasValue)
                            {
                                <p class="mb-1">
                                    <i class="fas fa-clock text-muted me-2"></i>
                                    <strong>Interview:</strong> @Model.InterviewDate.Value.ToString("MMM dd, yyyy")
                                </p>
                            }
                            @if (!string.IsNullOrEmpty(Model.JobSeeker?.User?.Email))
                            {
                                <p class="mb-1">
                                    <i class="fas fa-envelope text-muted me-2"></i>
                                    <strong>Email:</strong> @Model.JobSeeker.User.Email
                                </p>
                            }
                        </div>
                    </div>

                    @if (userRole == "Company" || userRole == "Specialist")
                    {
                        <div class="d-flex gap-2 mt-3">
                            <a href="@Url.Action("UpdateStatus", new { id = Model.Id })" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-edit me-1"></i>Update Status
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Cover Letter -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="fas fa-file-alt me-2"></i>Cover Letter</h5>
                </div>
                <div class="card-body">
                    <div class="application-content">
                        @Html.Raw(Model.CoverLetter?.Replace("\n", "<br>") ?? "No cover letter provided.")
                    </div>
                </div>
            </div>

            <!-- Interview Notes -->
            @if (!string.IsNullOrEmpty(Model.InterviewNotes) && (userRole == "Company" || userRole == "Specialist"))
            {
                <div class="card mb-4 shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0"><i class="fas fa-sticky-note me-2"></i>Interview Notes</h5>
                    </div>
                    <div class="card-body">
                        <div class="application-content">
                            @Html.Raw(Model.InterviewNotes.Replace("\n", "<br>"))
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-4">
            <!-- Applicant Info -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-user me-2"></i>Applicant Information</h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <div class="applicant-icon bg-light rounded-circle d-inline-flex align-items-center justify-content-center"
                             style="width: 80px; height: 80px;">
                            <i class="fas fa-user fa-2x text-primary"></i>
                        </div>
                        <h5 class="mt-2">@Model.JobSeeker?.User?.FirstName @Model.JobSeeker?.User?.LastName</h5>
                    </div>

                    <div class="applicant-details">
                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.User?.Email))
                        {
                            <p class="mb-2">
                                <i class="fas fa-envelope text-muted me-2"></i>
                                <strong>Email:</strong> @Model.JobSeeker.User.Email
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.User?.PhoneNumber))
                        {
                            <p class="mb-2">
                                <i class="fas fa-phone text-muted me-2"></i>
                                <strong>Phone:</strong> @Model.JobSeeker.User.PhoneNumber
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.Skills))
                        {
                            <div class="mb-2">
                                <strong><i class="fas fa-tools text-muted me-2"></i>Skills:</strong>
                                <div class="skill-tags mt-1">
                                    @foreach (var skill in Model.JobSeeker.Skills.Split(',').Take(5))
                                    {
                                        <span class="badge bg-secondary mb-1">@skill.Trim()</span>
                                    }
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.Experience))
                        {
                            <p class="mb-2">
                                <i class="fas fa-briefcase text-muted me-2"></i>
                                <strong>Experience:</strong> @Model.JobSeeker.Experience
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.Education))
                        {
                            <p class="mb-2">
                                <i class="fas fa-graduation-cap text-muted me-2"></i>
                                <strong>Education:</strong> @Model.JobSeeker.Education
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.CVFilePath))
                        {
                            <div class="mt-3">
                                <a href="@Model.JobSeeker.CVFilePath" target="_blank" class="btn btn-outline-primary w-100">
                                    <i class="fas fa-download me-1"></i>Download CV
                                </a>
                            </div>
                        }

                    </div>
                </div>
            </div>

            <!-- Job Information -->
            <div class="card shadow-sm">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-briefcase me-2"></i>Job Information</h5>
                </div>
                <div class="card-body">
                    <h6>@Model.JobPosting?.Title</h6>
                    <p class="text-muted mb-2">@Model.JobPosting?.Company?.CompanyName</p>

                    <div class="job-details">
                        <p class="mb-1">
                            <i class="fas fa-map-marker-alt text-muted me-2"></i>
                            <strong>Location:</strong> @Model.JobPosting?.Location
                        </p>

                        <p class="mb-1">
                            <i class="fas fa-clock text-muted me-2"></i>
                            <strong>Type:</strong> @Model.JobPosting?.JobType
                        </p>

                        @if (Model.JobPosting?.Salary.HasValue == true)
                        {
                            <p class="mb-1">
                                <i class="fas fa-money-bill-wave text-muted me-2"></i>
                                <strong>Salary:</strong> @Model.JobPosting.Salary.Value.ToString("C")
                            </p>
                        }

                        <p class="mb-0">
                            <i class="fas fa-calendar-times text-muted me-2"></i>
                            <strong>Deadline:</strong> @Model.JobPosting?.DeadlineDate?.ToString("MMM dd, yyyy")
                        </p>
                    </div>

                    <hr>
                    <a href="@Url.Action("Details", "JobPostingMvc", new { id = Model.JobPostingId })"
                       class="btn btn-sm btn-outline-primary w-100">
                        <i class="fas fa-external-link-alt me-1"></i>View Job Details
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(ApplicationStatus status)
    {
        return status switch
        {
            ApplicationStatus.Submitted => "secondary",
            ApplicationStatus.UnderReview => "info",
            ApplicationStatus.InterviewScheduled => "warning",
            ApplicationStatus.Accepted => "success",
            ApplicationStatus.Rejected => "danger",
            ApplicationStatus.Withdrawn => "dark",
            _ => "secondary"
        };
    }
}

<style>
    .application-content {
        line-height: 1.6;
        font-size: 1.05rem;
    }

    .applicant-icon {
        border: 3px solid #e9ecef;
    }

    .skill-tags .badge {
        margin-right: 4px;
        margin-bottom: 4px;
    }

    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .card-header {
        border-radius: 10px 10px 0 0 !important;
        font-weight: 600;
    }

    .badge {
        font-size: 0.9rem;
        padding: 0.5em 0.8em;
    }
</style>