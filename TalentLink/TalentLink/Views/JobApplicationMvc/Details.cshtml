@model TalentLink.Models.JobApplication
@{
    ViewData["Title"] = "Application Details";
    var userRole = ViewBag.UserRole as string;
}

<div class="container mt-4 fade-in">
    <div class="row">
        <div class="col-md-8">
            <!-- Application Header -->
            <div class="card mb-4 shadow header-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start mb-3">
                        <div>
                            <h2 class="card-title text-gradient">Application Details</h2>
                            <h5 class="job-title">@Model.JobPosting?.Title</h5>
                            <p class="company-name">@Model.JobPosting?.Company?.CompanyName</p>
                        </div>
                        <span class="badge bg-@GetStatusBadgeClass(Model.Status) fs-6 animate-badge">@Model.Status</span>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="mb-1">
                                <i class="fas fa-calendar text-muted me-2"></i>
                                <strong>Applied:</strong> @Model.AppliedDate.ToString("MMM dd, yyyy")
                            </p>
                            <p class="mb-1">
                                <i class="fas fa-user text-muted me-2"></i>
                                <strong>Applicant:</strong> @Model.JobSeeker?.User?.FirstName @Model.JobSeeker?.User?.LastName
                            </p>
                        </div>
                        <div class="col-md-6">
                            @if (Model.InterviewDate.HasValue)
                            {
                                <p class="mb-1">
                                    <i class="fas fa-clock text-muted me-2"></i>
                                    <strong>Interview:</strong> @Model.InterviewDate.Value.ToString("MMM dd, yyyy")
                                </p>
                            }
                            @if (!string.IsNullOrEmpty(Model.JobSeeker?.User?.Email))
                            {
                                <p class="mb-1">
                                    <i class="fas fa-envelope text-muted me-2"></i>
                                    <strong>Email:</strong> @Model.JobSeeker.User.Email
                                </p>
                            }
                        </div>
                    </div>

                    @if (userRole == "Company" || userRole == "Specialist")
                    {
                        <div class="d-flex gap-2 mt-3">
                            <a href="@Url.Action("UpdateStatus", "JobApplicationMvc", new { id = Model.Id })" class="btn btn-animate btn-outline-primary btn-sm">
                                <i class="fas fa-edit me-1"></i>Update Status
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Cover Letter -->
            <div class="card mb-4 shadow content-card">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="fas fa-file-alt me-2"></i>Cover Letter</h5>
                </div>
                <div class="card-body">
                    <div class="application-content">
                        @Html.Raw(Model.CoverLetter?.Replace("\n", "<br>") ?? "No cover letter provided.")
                    </div>
                </div>
            </div>

            <!-- Interview Notes -->
            @if (!string.IsNullOrEmpty(Model.InterviewNotes) && (userRole == "Company" || userRole == "Specialist"))
            {
                <div class="card mb-4 shadow content-card">
                    <div class="card-header bg-light">
                        <h5 class="mb-0"><i class="fas fa-sticky-note me-2"></i>Interview Notes</h5>
                    </div>
                    <div class="card-body">
                        <div class="application-content">
                            @Html.Raw(Model.InterviewNotes.Replace("\n", "<br>"))
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-4">
            <!-- Applicant Info -->
            <div class="card mb-4 shadow side-card">
                <div class="card-header bg-gradient-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-user me-2"></i>Applicant Information</h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <div class="applicant-icon bg-light rounded-circle d-inline-flex align-items-center justify-content-center glow"
                             style="width: 80px; height: 80px;">
                            <i class="fas fa-user fa-2x text-primary"></i>
                        </div>
                        <h5 class="mt-2">@Model.JobSeeker?.User?.FirstName @Model.JobSeeker?.User?.LastName</h5>
                    </div>

                    <div class="applicant-details">
                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.User?.Email))
                        {
                            <p class="mb-2">
                                <i class="fas fa-envelope text-muted me-2"></i>
                                <strong>Email:</strong> @Model.JobSeeker.User.Email
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.User?.PhoneNumber))
                        {
                            <p class="mb-2">
                                <i class="fas fa-phone text-muted me-2"></i>
                                <strong>Phone:</strong> @Model.JobSeeker.User.PhoneNumber
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.Skills))
                        {
                            <div class="mb-2">
                                <strong><i class="fas fa-tools text-muted me-2"></i>Skills:</strong>
                                <div class="skill-tags mt-1">
                                    @foreach (var skill in Model.JobSeeker.Skills.Split(',').Take(5))
                                    {
                                        <span class="badge bg-soft">@skill.Trim()</span>
                                    }
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.Experience))
                        {
                            <p class="mb-2">
                                <i class="fas fa-briefcase text-muted me-2"></i>
                                <strong>Experience:</strong> @Model.JobSeeker.Experience
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.Education))
                        {
                            <p class="mb-2">
                                <i class="fas fa-graduation-cap text-muted me-2"></i>
                                <strong>Education:</strong> @Model.JobSeeker.Education
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(Model.JobSeeker?.CVFilePath))
                        {
                            <div class="mt-3">
                                <a href="@Model.JobSeeker.CVFilePath" target="_blank" class="btn btn-animate btn-outline-primary w-100">
                                    <i class="fas fa-download me-1"></i>Download CV
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Job Information -->
            <div class="card shadow side-card">
                <div class="card-header bg-gradient-info text-white">
                    <h5 class="mb-0"><i class="fas fa-briefcase me-2"></i>Job Information</h5>
                </div>
                <div class="card-body">
                    <h6 class="job-title">@Model.JobPosting?.Title</h6>
                    <p class="company-name">@Model.JobPosting?.Company?.CompanyName</p>

                    <div class="job-details">
                        <p class="mb-1">
                            <i class="fas fa-map-marker-alt text-muted me-2"></i>
                            <strong>Location:</strong> @Model.JobPosting?.Location
                        </p>

                        <p class="mb-1">
                            <i class="fas fa-clock text-muted me-2"></i>
                            <strong>Type:</strong> @Model.JobPosting?.JobType
                        </p>

                        @if (Model.JobPosting?.Salary.HasValue == true)
                        {
                            <p class="mb-1">
                                <i class="fas fa-money-bill-wave text-muted me-2"></i>
                                <strong>Salary:</strong> @Model.JobPosting.Salary.Value.ToString("C")
                            </p>
                        }

                        <p class="mb-0">
                            <i class="fas fa-calendar-times text-muted me-2"></i>
                            <strong>Deadline:</strong> @Model.JobPosting?.DeadlineDate?.ToString("MMM dd, yyyy")
                        </p>
                    </div>

                    <hr>
                    <a href="@Url.Action("Details", "JobPostingMvc", new { id = Model.JobPostingId })"
                       class="btn btn-sm btn-animate btn-outline-primary w-100">
                        <i class="fas fa-external-link-alt me-1"></i>View Job Details
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(ApplicationStatus status)
    {
        return status switch
        {
            ApplicationStatus.Submitted => "secondary",
            ApplicationStatus.UnderReview => "info",
            ApplicationStatus.InterviewScheduled => "warning",
            ApplicationStatus.Accepted => "success",
            ApplicationStatus.Rejected => "danger",
            ApplicationStatus.Withdrawn => "dark",
            _ => "secondary"
        };
    }
}

<style>
    /* Fade-in Animation */
    .fade-in {
        animation: fadeIn 0.8s ease-in-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Card Styling */
    .card {
        border: none;
        border-radius: 12px;
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 16px rgba(0,0,0,0.12);
        }

    /* Header Gradient */
    .bg-gradient-primary {
        background: linear-gradient(135deg, #4facfe, #00f2fe);
    }

    .bg-gradient-info {
        background: linear-gradient(135deg, #43e97b, #38f9d7);
    }

    /* Animated Badge */
    .animate-badge {
        animation: pulse 1.5s infinite;
    }

    @@keyframes pulse {
        0%, 100% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.1);
        }
    }

    /* Text Gradient */
    .text-gradient {
        background: linear-gradient(90deg, #4facfe, #43e97b);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .job-title {
        font-weight: 600;
        color: #333;
    }

    .company-name {
        font-size: 0.95rem;
        color: #6c757d;
    }

    /* Buttons */
    .btn-animate {
        transition: all 0.3s ease;
        border-radius: 6px;
    }

        .btn-animate:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }

    /* Skill Badges */
    .skill-tags .badge {
        background: #e9f7f9;
        color: #007b83;
        font-weight: 500;
        padding: 6px 10px;
        border-radius: 20px;
    }

    /* Applicant Icon Glow */
    .glow {
        box-shadow: 0 0 12px rgba(0, 123, 255, 0.3);
    }

    .application-content {
        line-height: 1.6;
        font-size: 1.05rem;
        color: #444;
    }
</style>
